@page "/updateUserDetails"
@attribute [Authorize(Roles = "admin")]

@inject NavigationManager NavigationManager;
@using AirQualityUI.Models;
@using AirQualityUI.Services;
@using AirQualityUI.Data;
@using BCrypt;

<PageTitle>Felhasználó adatainak módosítása</PageTitle>

@* Felhasználói adatok módosítására szolgáló felület. *@

@if (loadingDatas)
{
    <MudGrid Justify="Justify.FlexStart">
        <MudItem xs="12" sm="12" md="12" lg="12" xl="12">
            <MudProgressLinear Style="width:100%;" Color="Color.Error" Indeterminate="true" />
        </MudItem>
    </MudGrid>

}
else if(!userIsSelected)
{
    @* Módosítandó felhasználó kiválasztására szolgáló legördülő lista megjelenítése *@

    <MudGrid Justify="Justify.FlexStart">
        <MudItem xs="12" sm="12" md="12" lg="12" xl="12">
            <MudPaper Class="pa-16 ma-2" Elevation="6" Style=" background-color: rgb(255,255,255,0.8);">
                <MudText Align="Align.Center" Typo="Typo.h4">Felhasználói adatok módosítása</MudText>
                <MudSelect T="User" Label="Felhasználó" Placeholder="Válasszon felhasználót..." Text="Válasszon felhasználót..." TextChanged="(()=> onUserSelectionChanged())" @bind-Value="SelectedUser">
                    @foreach (var user in users)
                    {
                        <MudSelectItem T="User" Value="@user">@user.UserName</MudSelectItem>
                    }
                </MudSelect>
            </MudPaper>
        </MudItem>
    </MudGrid>
    
}   
else if (userIsSelected)
{

    @* Felhasználói adatokkal felröltött űrlap megjelenítése, melyen adatmódosítások hajthatóak végre és a módosított adatok menthetőek.*@

    <MudGrid Justify="Justify.Center" Class="d-flex justify-center align-center" Style="background-color:rgb(255,255,255,0.5)">
        <MudItem xs="8" sm="8" md="6" lg="6" xl="4" Style="background-color:rgb(255,255,255,0.5)">
            <MudCard Class="py-lg-5">
                <MudForm Model="@SelectedUser" Class="py-lg-5" @ref="@form" Validation="@(userValidator.ValidateValue)" ValidationDelay="0">
                    <MudCardContent>
                        <MudText Typo="Typo.caption" Color="Color.Error" Align="Align.Center">@message</MudText>
                        <MudTextField @bind-Value="SelectedUser.UserName"
                                      For="@(() => SelectedUser.UserName)"
                                      Immediate="true"
                                      Label="Felhasználónév"
                                      OnlyValidateIfDirty="true" />

                        <MudTextField @bind-Value="SelectedUser.LastName"
                                      For="@(() => SelectedUser.LastName)"
                                      Immediate="true"
                                      Label="Vezetéknév"
                                      OnlyValidateIfDirty="true" />

                        <MudTextField @bind-Value="SelectedUser.FirstName"
                                      For="@(() => SelectedUser.FirstName)"
                                      Immediate="true"
                                      Label="Keresztnév"
                                      OnlyValidateIfDirty="true" />

                        <MudTextField @bind-Value="SelectedUser.Email"
                                      For="@(() => SelectedUser.Email)"
                                      Immediate="true"
                                      Label="E-mail cím"
                                      OnlyValidateIfDirty="true" />

                        <MudTextField @bind-Value="SelectedUser.Password"
                                      For="@(() => SelectedUser.Password)"
                                      Immediate="true"
                                      Label="Jelszó"
                                      InputType="InputType.Password"
                                      OnlyValidateIfDirty="true" />
                        <MudSelect T="string" Label="Jogosultsági szint" @bind-Value="SelectedRole">
                            @foreach (var role in Enum.GetValues(typeof(Roles)))
                            {
                                <MudSelectItem T="string" Value="@role.ToString()">@role.ToString()</MudSelectItem>
                            }
                        </MudSelect>
                        <MudSelect T="Module" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionText))" Label="Modulok" MultiSelection="true" Placeholder="Válasszon modult..." @bind-SelectedValues="selectedModules">
                            @foreach (var module in modules)
                            {
                                <MudSelectItem T="Module" Value="@module">@module.ModuleName</MudSelectItem>
                            }
                        </MudSelect>
                    </MudCardContent>
                </MudForm>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Disabled="@submitDisabled" Color="Color.Success" Class="ml-auto" OnClick="@(async () => await Submit())">Mentés</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
}

@code {

   
}